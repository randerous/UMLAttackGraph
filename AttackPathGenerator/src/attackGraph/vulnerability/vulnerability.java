package attackGraph.vulnerability;

import java.util.ArrayList;
import java.util.List;

import attackGraph.user_specification.user_specification;

public class vulnerability {
    public String CVEID;
    public String CWEID;
    public String AttackVector; // None/local/network
    public List<String> RequiredElements;
    public List<user_specification> RequiredPrivileges;
    public List<user_specification> GainedPrivileges;
    public Boolean IsTakeOver;
    public String ConfidentialityImpact;

    public String getCVEID() {
        return CVEID;
    }

    public void setCVEID(String cVEID) {
        CVEID = cVEID;
    }

    public String getCWEID() {
        return CWEID;
    }

    public void setCWEID(String cWEID) {
        CWEID = cWEID;
    }

    public String getAttackVector() {
        return AttackVector;
    }

    public void setAttackVector(String attackVector) {
        AttackVector = attackVector;
    }

    public List<String> getRequiredElements() {
        return RequiredElements;
    }

    public void setRequiredElements(List<String> requiredElements) {
        RequiredElements = requiredElements;
    }

    public List<user_specification> getRequiredPrivileges() {
        return RequiredPrivileges;
    }

    public void setRequiredPrivileges(List<user_specification> requiredPrivileges) {
        RequiredPrivileges = requiredPrivileges;
    }

    public List<user_specification> getGainedPrivileges() {
        return GainedPrivileges;
    }

    public void setGainedPrivileges(List<user_specification> gainedPrivileges) {
        GainedPrivileges = gainedPrivileges;
    }

    public Boolean getIsTakeOver() {
        return IsTakeOver;
    }

    public void setIsTakeOver(Boolean isTakeOver) {
        IsTakeOver = isTakeOver;
    }

    public String getConfidentialityImpact() {
        return ConfidentialityImpact;
    }

    public void setConfidentialityImpact(String confidentialityImpact) {
        ConfidentialityImpact = confidentialityImpact;
    }

    public vulnerability(String cveString, String cweString, String attackVString, List<String> reqEList, List<user_specification> rSpecifications, List<user_specification> gSpecifications, Boolean istakeOver, String confidentString)
    {
        this.CVEID = cveString;
        this.CWEID = cweString;
        this.AttackVector = attackVString;
        this.RequiredElements = new ArrayList<String>();
        this.RequiredPrivileges = new ArrayList<user_specification>();
        this.GainedPrivileges = new ArrayList<user_specification>();
        this.IsTakeOver = istakeOver;
        this.ConfidentialityImpact = confidentString;
    }
}
